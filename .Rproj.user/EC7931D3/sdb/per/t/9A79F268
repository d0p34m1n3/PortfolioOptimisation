{
    "contents" : "require(ggplot2)\nrequire(lubridate)\nrequire(dplyr)\n\nrm(list=ls())\n\nObjectDir <- 'F:/MindlessInvesting/R/Objects'\nScriptDir <- 'D:/MindlessInvesting/R/Scripts'\nConnectionString <- 'Server=CICERO\\\\SQLPROD;Database=MindlessInvesting;Trusted_Connection=True;Connection Timeout=600'\nDivinationEntityId <- 1348808 # Equity Model 4W\nPortfolioEntityId <- 1348808 # Equity Model 4W\n\nLog <- function(message, ...) cat(format(Sys.time(), \"%H:%M:%S\"), \"-\", sprintf(message, ...), \"\\n\")\n\nMDC <- dbConnect(\"SqlServer\", url=ConnectionString, timeout=600)\n\nDivination <-\n  dbGetQuery(MDC, paste(sep=\"\\n\",\n                        sprintf(\"select EntityId, Name, ShortName, SourceView, \"),\n                        sprintf(\"PeriodType, GroupingLevel\"),\n                        sprintf(\"from DivinationsPlus where EntityId = %i\", DivinationEntityId)\n  ))\n\nScript <-  paste(sep=\"\\n\",\n                 sprintf(\"select PCR.Date, PP.EntityId, E.Symbol, \"),\n                 sprintf(\"convert(float, sum(PP.Quantity)) as CurrentQuantity, avg(PP.StartPrice) as Price, sum(PP.StartPrice * PP.Quantity) as CurrentAmount,\"),\n                 sprintf(\"avg(coalesce(iif(PP.Quantity>0, R.%sLongPredRanking, R.%sShortPredRanking), 0)) as Ranking, \",\n                         Divination$ShortName, Divination$ShortName),\n                 sprintf(\"avg(coalesce(iif(PP.Quantity>0, R.%sLongPred, -R.%sShortPred), 0)) as AlphaPrediction, \",\n                         Divination$ShortName, Divination$ShortName),\n                 sprintf(\"avg(PCR.ChangeVolPrediction) as VolatilityPrediction, \",\n                         Divination$ShortName, Divination$ShortName),\n                 sprintf(\"avg(coalesce(PC.BetaPrediction, case when PP.Quantity > 0 then 1.25 else 0.75 end)) as BetaPrediction,\"),\n                 sprintf(\"coalesce(exp(PC.ActualNext1WLogChange)-1, -999) as ActualReturn1W,\"),\n                 sprintf(\"coalesce(exp(PC.ActualNext4WLogChange)-1, -999) as ActualReturn4W,\"),\n                 sprintf(\"coalesce(exp(PC.ActualNext1WLogAlpha)-1, -999) as ActualAlpha1W,\"),\n                 sprintf(\"coalesce(exp(PC.ActualNext4WLogAlpha)-1, -999) as ActualAlpha4W\"),\n                 sprintf(\"from PortfolioPositionsPlus PP\"),\n                 sprintf(\"join PriceChangesRankings PCR\"),\n                 sprintf(\"on PCR.EntityId = PP.EntityId\"),\n                 sprintf(\"and PCR.Date = (select max(Date) from WeeklyDates where Date <= PP.StartDate and IsEndOf4Weeks = 1)\"),\n                 sprintf(\"join Entities E\"),\n                 sprintf(\"on E.EntityId = PP.EntityId\"),\n                 sprintf(\"and E.EntityType <> 'X'\"),\n                 sprintf(\"left outer join %sRankings R\", Divination$SourceView),\n                 sprintf(\"on R.EntityId = PP.EntityId\"),\n                 sprintf(\"and R.Date = PCR.Date\"),\n                 sprintf(\"and iif(PP.Quantity>0, R.%sLongPred, R.%sShortPred) is not null\", Divination$ShortName, Divination$ShortName),\n                 sprintf(\"and iif(PP.Quantity>0, R.%sLongStdDev, R.%sShrtStdDev) > 0\", Divination$ShortName, Divination$ShortName),\n                 sprintf(\"left outer join PriceChanges PC\"),\n                 sprintf(\"on PC.EntityId = PP.EntityId\"),\n                 sprintf(\"and PC.Date = PCR.Date\"),\n                 sprintf(\"where PP.PortfolioEntityId = %i\", PortfolioEntityId),\n                 sprintf(\"group by PCR.Date, PP.EntityId, E.Symbol, PC.ActualNext1WLogChange, PC.ActualNext4WLogChange, PC.ActualNext1WLogAlpha, PC.ActualNext4WLogAlpha\"),\n                 sprintf(\"having sum(PP.Quantity) <> 0\")\n           )\nPP <- dbGetQuery(MDC, Script)\nPP$ActualReturn1W[PP$ActualReturn1W == -999] <- NA_real_\nPP$ActualReturn4W[PP$ActualReturn4W == -999] <- NA_real_\nPP$ActualAlpha1W[PP$ActualAlpha1W == -999] <- NA_real_\nPP$ActualAlpha4W[PP$ActualAlpha4W == -999] <- NA_real_\nPP$LongOrShort=factor(sign(PP$CurrentAmount), labels=c(\"Short\", \"Long\"))\ndbDisconnect(MDC)\n\nPP2 <- PP\nPP2$LongOrShort <- factor(0, labels=c(\"Combined\"))\nPP <- rbind(PP, PP2)\n\nLog(\"Mean Ranking: %.0f\", mean(PP$Ranking, na.rm=T))\nLog(\"Mean Ranking>0: %.0f\", mean(PP$Ranking[PP$Ranking>0], na.rm=T))\nLog(\"Mean Change Amount when Ranking==0: %.0f\", mean((PP$CurrentAmount * PP$ActualReturn4W)[PP$Ranking==0], na.rm=T))\nLog(\"Total Short Alpha: %.0f\", sum((PP$CurrentAmount*PP$ActualAlpha4W)[PP$CurrentQuantity < 0], na.rm=T))\nLog(\"Total Long Alpha: %.0f\", sum((PP$CurrentAmount*PP$ActualAlpha4W)[PP$CurrentQuantity > 0], na.rm=T))\nLog(\"Total Alpha: %.0f\", sum((PP$CurrentAmount*PP$ActualAlpha4W), na.rm=T))\nLog(\"Total Short Return: %.0f\", sum((PP$CurrentAmount*PP$ActualReturn4W)[PP$CurrentQuantity < 0], na.rm=T))\nLog(\"Total Long Return: %.0f\", sum((PP$CurrentAmount*PP$ActualReturn4W)[PP$CurrentQuantity > 0], na.rm=T))\nLog(\"Total Return: %.0f\", sum((PP$CurrentAmount*PP$ActualReturn4W), na.rm=T))\n\nRankSummary <- PP %>% filter(Ranking>=80) %>% group_by(Ranking, LongOrShort) %>% summarize(Amount=round(mean(abs(CurrentAmount), na.rm=T)), Alpha4W=mean(ActualAlpha4W*sign(CurrentAmount), na.rm=T), RelChange=round(mean(CurrentAmount * ActualAlpha4W, na.rm=T)), RelTotalChange=round(sum(CurrentAmount * ActualAlpha4W, na.rm=T)), Count=n())\n\n(RankSummary %>% ggplot(aes(Ranking, Amount, group=LongOrShort, colour=LongOrShort)) + geom_point() + stat_smooth()) %>% print\n(RankSummary %>% ggplot(aes(Ranking, Alpha4W, group=LongOrShort, colour=LongOrShort)) + geom_point() + stat_smooth()) %>% print\n(RankSummary %>% ggplot(aes(Ranking, RelChange, group=LongOrShort, colour=LongOrShort)) + geom_point() + stat_smooth()) %>% print\n(RankSummary %>% ggplot(aes(Ranking, Count, group=LongOrShort, colour=LongOrShort)) + geom_bar(stat=\"identity\") + stat_smooth()) %>% print\n(RankSummary %>% ggplot(aes(Ranking, RelTotalChange, group=LongOrShort, colour=LongOrShort)) + geom_point() + stat_smooth()) %>% print\n\nYearSummary <- PP %>% group_by(Year=year(Date), LongOrShort) %>% summarize(Amount=round(mean(abs(CurrentAmount), na.rm=T)), Alpha4W=mean(ActualAlpha4W*sign(CurrentAmount), na.rm=T), RelChange=round(mean(CurrentAmount * ActualAlpha4W, na.rm=T)), RelTotalChange=round(sum(CurrentAmount * ActualAlpha4W, na.rm=T)), Count=n())\n\n(YearSummary %>% ggplot(aes(Year, Amount, group=LongOrShort, colour=LongOrShort)) + geom_point() + stat_smooth()) %>% print\n(YearSummary %>% ggplot(aes(Year, Alpha4W, group=LongOrShort, colour=LongOrShort)) + geom_point() + stat_smooth()) %>% print\n(YearSummary %>% ggplot(aes(Year, RelChange, group=LongOrShort, colour=LongOrShort)) + geom_point() + stat_smooth()) %>% print\n(YearSummary %>% ggplot(aes(Year, Count, group=LongOrShort, colour=LongOrShort)) + geom_bar(stat=\"identity\")) %>% print\n(YearSummary %>% ggplot(aes(Year, RelTotalChange, group=LongOrShort, colour=LongOrShort)) + geom_point() + stat_smooth()) %>% print\n\n",
    "created" : 1431594283944.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2218649875",
    "id" : "9A79F268",
    "lastKnownWriteTime" : 1431637785,
    "path" : "D:/MindlessInvesting/R/Development/MiscAnalysis/Portfolio Performance Analysis.R",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled4"
    },
    "source_on_save" : false,
    "type" : "r_source"
}